import asyncio
from telegram.ext import Application, CommandHandler, CallbackQueryHandler
from ..utils.logger import logger
from ..handlers.command_handler import CommandHandler
from .mock_api import MockLegalAPI

class LegalBot:
    """Bot Tr·ª£ Gi√∫p Ph√°p L√Ω"""
    
    def __init__(self, token: str):
        """Kh·ªüi t·∫°o bot"""
        self.token = token
        self.api = MockLegalAPI()
        self.handler = CommandHandler(self.api)
        self.logger = logger

    async def start(self):
        """Kh·ªüi ƒë·ªông bot"""
        try:
            # Kh·ªüi t·∫°o application
            application = Application.builder().token(self.token).build()

            # ƒêƒÉng k√Ω c√°c handlers
            application.add_handler(CommandHandler("start", self.handler.start_command))
            application.add_handler(CommandHandler("help", self.handler.help_command))
            application.add_handler(CommandHandler("search", self.handler.search_command))
            application.add_handler(CommandHandler("term", self.handler.term_command))
            application.add_handler(CommandHandler("news", self.handler.news_command))
            application.add_handler(CommandHandler("latest", self.handler.latest_command))

            # Handler cho c√°c n√∫t b·∫•m
            application.add_handler(CallbackQueryHandler(self.handler.button_handler))

            # Kh·ªüi ƒë·ªông bot
            self.logger.info("Bot ƒëang kh·ªüi ƒë·ªông...")
            await application.initialize()
            await application.start()
            await application.run_polling()

        except Exception as e:
            self.logger.error(f"L·ªói kh·ªüi ƒë·ªông bot: {str(e)}")
            raise

def main():
    """H√†m main ƒë·ªÉ ch·∫°y bot"""
    import os
    from dotenv import load_dotenv

    # Load bi·∫øn m√¥i tr∆∞·ªùng
    load_dotenv()
    
    # L·∫•y token t·ª´ bi·∫øn m√¥i tr∆∞·ªùng
    token = os.getenv('TELEGRAM_TOKEN')
    if not token:
        raise ValueError("Kh√¥ng t√¨m th·∫•y TELEGRAM_TOKEN trong bi·∫øn m√¥i tr∆∞·ªùng!")

    # Kh·ªüi t·∫°o v√† ch·∫°y bot
    bot = LegalBot(token)
    
    try:
        print("üöÄ ƒêang kh·ªüi ƒë·ªông Bot Tr·ª£ Gi√∫p Ph√°p L√Ω...")
        asyncio.run(bot.start())
    except KeyboardInterrupt:
        print("\nüëã T·∫°m bi·ªát!")
    except Exception as e:
        print(f"‚ùå L·ªói: {str(e)}")

if __name__ == '__main__':
    main()
